#include "ResourceManager.hpp"

namespace FT {

	// Loads first mesh found in the model
    Mesh ResourceManager::LoadMesh(const std::string & path)
	{
        Model model = LoadModel(path);
        return (*(model.GetMeshes().begin()));
	}

    Mesh ResourceManager::LoadMesh(Mesh::MeshType type)
    {
        switch (type)
        {
            case Mesh::MeshType::RECT:
                return (load_rect());
                break;
            case Mesh::MeshType::CUBE:
                return (load_cube());
                break;
            default:
                return (load_cube());
        }
    }

	Mesh   ResourceManager::load_rect()
    {
        // GEOMETRY
        std::vector<Vertex> vertices =
        {
            // POS              UV              NORMAL              COLOR
            {{-0.5, -0.5, 0.0}, {0.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},  // BOTTOM LEFT
            {{0.5, -0.5, 0.0}, {1.0, 0.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},  // BOTTOM RIGHT
            {{0.5, 0.5, 0.0}, {1.0, 1.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},  // UP RIGHT
            {{-0.5, 0.5, 0.0}, {0.0, 1.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}}   // UP LEFT
        };
        std::vector<unsigned int> indices = {0, 1, 3, 1, 2, 3};
		Geometry new_geo = Geometry(vertices, indices);
        // MATERIAL
		Material new_mat = Material(m_DEFAULT_TEXTURE);
        // MESH
        Mesh new_mesh = Mesh(new_geo, new_mat);
        return (new_mesh);
    }
    Mesh   ResourceManager::load_cube(bool face_normals)
    {
        std::vector<Vertex> vertices;
        if (face_normals)
            vertices =
            {
                // POS              UV              NORMAL              COLOR
                // FRONT FACE
                {{-0.5, -0.5, -0.5}, {0.25, 1.0/3.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, -0.5}, {0.5, 1.0/3.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0}, {0.0, 0.0, 1.0}, {0.8, 0.8, 0.8, 1.0}},
                // BACK FACE
                {{0.5, -0.5, 0.5}, {0.75, 1.0/3.0, 1.0}, {0.0, 0.0, -1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, 0.5}, {1.0, 1.0/3.0, 1.0}, {0.0, 0.0, -1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {1.0, 2.0/3.0, 1.0}, {0.0, 0.0, -1.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.75, 2.0/3.0, 1.0}, {0.0, 0.0, -1.0}, {0.8, 0.8, 0.8, 1.0}},
                // TOP FACE
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0}, {0.0, 1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0}, {0.0, 1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.5, 1.0, 1.0}, {0.0, 1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {0.25, 1.0, 1.0}, {0.0, 1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                // BOTTOM FACE
                {{-0.5, -0.5, 0.5}, {0.5, 1.0/3.0, 1.0}, {0.0, -1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, 0.5}, {0.25, 1.0/3.0, 1.0}, {0.0, -1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, -0.5}, {0.25, 0.0, 1.0}, {0.0, -1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, -0.5}, {0.5, 0.0, 1.0}, {0.0, -1.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                // RIGHT FACE
                {{0.5, -0.5, -0.5}, {0.5, 1.0/3.0, 1.0}, {1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, 0.5}, {0.75, 1.0/3.0, 1.0}, {1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.75, 2.0/3.0, 1.0}, {1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0}, {1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                // LEFT FACE
                {{-0.5, -0.5, 0.5}, {0.0, 1.0/3.0, 1.0}, {-1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, -0.5}, {0.25, 1.0/3.0, 1.0}, {-1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0}, {-1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {0.0, 2.0/3.0, 1.0}, {-1.0, 0.0, 0.0}, {0.8, 0.8, 0.8, 1.0}}
            };
        else
            vertices =
            {
                // POS              UV              NORMAL              COLOR
                // FRONT FACE
                {{-0.5, -0.5, -0.5}, {0.25, 1.0/3.0, 1.0}, FT::normalize(FT::vec3(-0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, -0.5}, {0.5, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0},  FT::normalize(FT::vec3(-0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                // BACK FACE
                {{0.5, -0.5, 0.5}, {0.75, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, 0.5}, {1.0, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(-0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {1.0, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(-0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.75, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                // TOP FACE
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0},  FT::normalize(FT::vec3(-0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.5, 1.0, 1.0},      FT::normalize(FT::vec3(0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {0.25, 1.0, 1.0},    FT::normalize(FT::vec3(-0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                // BOTTOM FACE
                {{-0.5, -0.5, 0.5}, {0.5, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(-0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, 0.5}, {0.25, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, -0.5}, {0.25, 0.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, -0.5}, {0.5, 0.0, 1.0},   FT::normalize(FT::vec3(-0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                // RIGHT FACE
                {{0.5, -0.5, -0.5}, {0.5, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, -0.5, 0.5}, {0.75, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, 0.5}, {0.75, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{0.5, 0.5, -0.5}, {0.5, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                // LEFT FACE
                {{-0.5, -0.5, 0.5}, {0.0, 1.0/3.0, 1.0},   FT::normalize(FT::vec3(-0.5, -0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, -0.5, -0.5}, {0.25, 1.0/3.0, 1.0}, FT::normalize(FT::vec3(-0.5, -0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, -0.5}, {0.25, 2.0/3.0, 1.0},  FT::normalize(FT::vec3(-0.5, 0.5, -0.5)), {0.8, 0.8, 0.8, 1.0}},
                {{-0.5, 0.5, 0.5}, {0.0, 2.0/3.0, 1.0},    FT::normalize(FT::vec3(-0.5, 0.5, 0.5)), {0.8, 0.8, 0.8, 1.0}}
            };
        std::vector<unsigned int> indices = /* THIS IS BAD */
        {
            // FRONT FACE
            0, 1, 3, 1, 2, 3,
            // BACK FACE
            4, 5, 7, 5, 6, 7,
            // TOP FACE
            8, 9, 11, 9, 10, 11,
            // BOTTOM FACE
            12, 13, 15, 13, 14, 15,
            // RIGHT FACE
            16, 17, 19, 17, 18, 19,
            // LEFT FACE
            20, 21, 23, 21, 22, 23
        };
        Geometry new_geo = Geometry(vertices, indices);
        Material new_mat = Material(m_DEFAULT_TEXTURE);
		Mesh new_mesh = Mesh(new_geo, new_mat);
        return (new_mesh);
    }
}